set runtimepath+=~/.vim/bundle/jshint2.vim/

set tabstop=2                   " An indentation every four columns
set softtabstop=2               " Let backspace delete indent
set shiftwidth=2                " Use indents of 2 spaces

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" ctrlP
" source: https://gist.github.com/seyDoggy/613f2648cebc6c7b456f
" unlet the original spf13-vim settings
unlet g:ctrlp_custom_ignore
unlet g:ctrlp_user_command
" set your own custom ignore settings
let g:ctrlp_custom_ignore = {
      \ 'dir': '\.git$\|\.hg$\|\.svn$\|bower_components$\|dist$\|node_modules$\|project_files$\|target$',
      \ 'file': '\.exe$\|\.so$\|\.dll$\|\.pyc$' }
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

:imap jj <Esc>
nnoremap te  :tabedit<Space>
:colorscheme Seti "Monokai "tir_black


" Ignore CamelCase words when spell checking
"fun! IgnoreCamelCaseSpell()
"syn match CamelCase /\<[A-Z][a-z]\+[A-Z].\{-}\>/ contains=@NoSpell transparent
"syn cluster Spell add=CamelCase
"endfun
"autocmd BufRead,BufNewFile * :call IgnoreCamelCaseSpell()
"
set nospell

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" CTRL-Tab is next tab
noremap <Tab> :<C-U>tabnext<CR>
inoremap <C-Tab> <C-\><C-N>:tabnext<CR>
cnoremap <C-Tab> <C-C>:tabnext<CR>
" " CTRL-SHIFT-Tab is previous tab
noremap <C-S-Tab> :<C-U>tabprevious<CR>
inoremap <C-S-Tab> <C-\><C-N>:tabprevious<CR>
cnoremap <C-S-Tab> <C-C>:tabprevious<CR>"

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" auto reload changes
:set autoread


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" NERDTress File highlighting
function! NERDTreeHighlightFile(extension, fg, bg, guifg, guibg)
  exec 'autocmd filetype nerdtree highlight ' . a:extension .' ctermbg='. a:bg .' ctermfg='. a:fg .' guibg='. a:guibg .' guifg='. a:guifg
  exec 'autocmd filetype nerdtree syn match ' . a:extension .' #^\s\+.*'. a:extension .'$#'
endfunction

call NERDTreeHighlightFile('jade', 'green', 'none', 'green', '#151515')
call NERDTreeHighlightFile('ini', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('md', 'blue', 'none', '#3366FF', '#151515')
call NERDTreeHighlightFile('yml', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('config', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('conf', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('json', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('html', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('styl', 'cyan', 'none', 'cyan', '#151515')
call NERDTreeHighlightFile('css', 'cyan', 'none', 'cyan', '#151515')
call NERDTreeHighlightFile('coffee', 'Red', 'none', 'red', '#151515')
call NERDTreeHighlightFile('js', 'Red', 'none', '#ffa500', '#151515')
call NERDTreeHighlightFile('php', 'Magenta', 'none', '#ff00ff', '#151515')

let g:nerdtree_tabs_open_on_new_tab=1
let g:nerdtree_tabs_open_on_console_startup=1

" view the current buffer in NERDTree
map <leader>r :NERDTreeFind<cr>

" https://github.com/ggreer/the_silver_searcher
let g:ackprg = 'ag --nogroup --nocolor --column'
let g:syntastic_python_checkers = ['python', 'pylint']
let g:syntastic_python_pylint_exec = '/usr/local/bin/pylint'

map <leader>f :Autoformat

let g:syntastic_javascript_checkers = ['eslint']
"let g:auto_save = 1  " enable AutoSave on Vim startup
"
"neocomplete
" Popup color.
hi Pmenu ctermbg=8
hi PmenuSel ctermbg=1
hi PmenuSbar ctermbg=0

" break line and stay on the same line
nmap <S-Enter> O<Esc>j
nmap <CR> o<Esc>k

" dont highlight spaces
set listchars=

" neocomplete - don't open automaticly
let g:neocomplcache_disable_auto_complete = 1

inoremap <expr><TAB> pumvisible() ? "\<C-n>" : <SID>check_back_space() ? "\<TAB>" : "\<C-x>\<C-u>"
function! s:check_back_space()"{{{
      let col = col('.') - 1
          return !col || getline('.')[col - 1] =~ '\s'
        endfunction"}}}
